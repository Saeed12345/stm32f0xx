<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lesson 6: Read Multiple Potentiometers</title>
    <style>
		h2{
		text-align : center;
	    color : #008080 ; 
		}
        body {
            font-family: Arial, sans-serif;
            display: flex;
            margin: 0;
            padding: 0;
        }
        .menu {
            width: 20%;
            background-color: #f0f0f0;
            padding: 20px;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
            box-sizing: border-box;
        }
        .menu button {
            display: block;
            margin: 10px 0;
            padding: 10px;
            width: 100%;
            cursor: pointer;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 4px;
            text-align: left;
        }
        .content {
            width: 80%;
            padding: 20px;
            box-sizing: border-box;
        }
        .lesson-container {
            display: flex;
        }
        .lesson-text {
            width: 50%;
            padding: 20px;
            box-sizing: border-box;
        }
        .lesson-code {
            width: 50%;
            padding: 20px;
            background-color: #f9f9f9;
            box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1);
            box-sizing: border-box;
            font-family: 'Courier New', Courier, monospace;
            position: relative;
        }
        .content iframe {
            margin-top: 20px;
            width: 100%;
        }
        .copy-button {
            position: absolute;
            top: 20px;
            right: 20px;
            padding: 5px 10px;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <!-- Left Side: Menu with Buttons for Navigation -->
    <div class="menu">
        <button onclick="location.href='file:///F:/HTMLproject/html-files/index.htm'">Back to Main Page</button>
    </div>

    <!-- Right Side: Lesson 6 Content -->
    <div class="content">
        <div class="lesson-container">
            <div class="lesson-text">
                <h2>Lesson 6: Read Multiple Potentiometers</h2>
                <p>In this lesson, we will learn how to read potentiometers connected to pins PA0 and PA1 on the STM32F0xx microcontroller. We will include the header <code>#include "stm32f0xx.h"</code> in our code.</p>
                <p>Watch the tutorial video:</p>
                <iframe height="315" src="https://www.youtube.com/embed/YOUR_LESSON6_YOUTUBE_VIDEO_ID" frameborder="0" allowfullscreen></iframe>
            </div>
            <div class="lesson-code">
                <button class="copy-button" onclick="copyCode()">Copy Code</button>
                <pre style = "background-color : #F0FFFF;"><code id="code-block">
// Include the STM32F0xx header
#include "stm32f0xx.h"

// Initialize ADC
void ADC_Init(void) {
    // Enable clock for GPIOA and ADC
    RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
    RCC->APB2ENR |= RCC_APB2ENR_ADCEN;

    // Set PA0 and PA1 to analog mode
    GPIOA->MODER |= GPIO_MODER_MODER0 | GPIO_MODER_MODER1;

    // ADC configuration
    ADC1->CR = ADC_CR_ADEN;  // Enable ADC
    while (!(ADC1->ISR & ADC_ISR_ADRDY));  // Wait until ADC is ready
}

// Read ADC value from a specified channel
uint16_t ADC_Read(uint32_t channel) {
    ADC1->CHSELR = channel;  // Select channel
    ADC1->CR |= ADC_CR_ADSTART;  // Start conversion
    while (!(ADC1->ISR & ADC_ISR_EOC));  // Wait for conversion to complete
    return ADC1->DR;  // Return the ADC value
}

int main(void) {
    // Initialize ADC
    ADC_Init();

    uint16_t adc_value_PA0;
    uint16_t adc_value_PA1;

    while (1) {
        // Read ADC values
        adc_value_PA0 = ADC_Read(ADC_CHSELR_CHSEL0);  // Read from PA0
        adc_value_PA1 = ADC_Read(ADC_CHSELR_CHSEL1);  // Read from PA1

        // Here, you can process the adc_value_PA0 and adc_value_PA1
        // or send them via USART for example
    }

    // We should never reach here
    return 0;
}
                </code></pre>
            </div>
        </div>
    </div>
    <script>
        function copyCode() {
            var code = document.getElementById("code-block").innerText;
            navigator.clipboard.writeText(code).then(function() {
                alert("Code copied to clipboard!");
            }, function(err) {
                alert("Failed to copy code: ", err);
            });
        }
    </script>
</body>
</html>
